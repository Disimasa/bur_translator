version: '3.3'

services:
  backend:
    build:
      context: ./backend
    ports:
      - '3020:3020'
    volumes:
      - ./backend/model/:/backend/model/
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 7G  # Ограничиваем использование памяти
        reservations:
          memory: 2G  # Минимальная резервация памяти
    environment:
      - OMP_NUM_THREADS=2  # Ограничиваем количество потоков OpenMP
      - MKL_NUM_THREADS=2  # Ограничиваем количество потоков MKL
    healthcheck:
      test: ["CMD", "curl", "-f", "http://176.109.108.228:3020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - VITE_MODE=production

  nginx:
    container_name: nginx-container
    build:
      context: ./nginx
    depends_on:
      - frontend
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/www/certbot:/var/www/certbot
      - ./nginx/logs:/var/log/nginx
      - ./keys/translate-bur.key:/etc/nginx/translate-bur.key
      - ./keys/translate-bur.crt:/etc/nginx/translate-bur.crt
    ports:
      - '443:443'
      - '80:80'
